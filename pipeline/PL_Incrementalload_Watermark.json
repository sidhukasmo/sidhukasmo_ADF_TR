{
	"name": "PL_Incrementalload_Watermark",
	"properties": {
		"activities": [
			{
				"name": "OldWatermarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT waterMarkVal\nFROM [dbo].[WaterMark]\nWHERE tableName = '@{pipeline().parameters.finalTableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable_CT",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "NewWatermarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT MAX(@{pipeline().parameters.waterMarkCol}) AS NewwaterMarkVal\nFROM @{pipeline().parameters.srcTableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_MasterdataDBTableStudent",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CopyToStageTable",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "OldWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "NewWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from @{pipeline().parameters.srcTableName}\nwhere @{pipeline().parameters.waterMarkCol} > \n'@{activity('lookupOldWaterMark').output.firstRow.waterMarkVal}' \nand @{pipeline().parameters.waterMarkCol} <= \n'@{activity('lookupNewWaterMark').output.firstRow.NewwaterMarkVal}'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE @{pipeline().parameters.stgTableName}",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": []
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "emp_id",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 4
								},
								"sink": {
									"name": "Control_Id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "emp_name",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Synapse_Worskpace",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "dept",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Server_Name",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "isactive",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 1
								},
								"sink": {
									"name": "Database_Name",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "startdate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Schema_Name",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "enddate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Table_Name",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "ETL_Velocity",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "Current_Value",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "Previous_Value",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "Is_Incremental_Load",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"sink": {
									"name": "EDW_Created_Date",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"sink": {
									"name": "EDW_Created_By",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "EDW_Modified_Date",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"sink": {
									"name": "EDW_Modified_By",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "DataLake_Container",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "DataLake_Folder",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "Disable_Load_Flag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_MasterdataDBTableStudent",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_stgStudent_Destination",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "uspUpsertStudent",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyToStageTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "dbo.usp_upsert_Student "
				},
				"linkedServiceName": {
					"referenceName": "LK_AzureSqlDatabase1_output",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"finalTableName": {
				"type": "string",
				"defaultValue": "Student"
			},
			"srcTableName": {
				"type": "string",
				"defaultValue": "Student"
			},
			"waterMarkCol": {
				"type": "string",
				"defaultValue": "updateDate"
			},
			"stgTableName": {
				"type": "string",
				"defaultValue": "stgStudent"
			},
			"storedProcUpsert": {
				"type": "string",
				"defaultValue": "usp_upsert_Student"
			},
			"storedProcWaterMark": {
				"type": "string",
				"defaultValue": "usp_update_WaterMark"
			}
		},
		"annotations": []
	}
}