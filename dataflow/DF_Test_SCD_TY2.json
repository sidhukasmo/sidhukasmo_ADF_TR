{
	"name": "DF_Test_SCD_TY2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Emp_Csv",
						"type": "DatasetReference"
					},
					"name": "empCsv"
				},
				{
					"dataset": {
						"referenceName": "DS_Emp_SCD2",
						"type": "DatasetReference"
					},
					"name": "EmpSqlSCD2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Emp_SCD2",
						"type": "DatasetReference"
					},
					"name": "NewRecords"
				}
			],
			"transformations": [
				{
					"name": "Notexists"
				},
				{
					"name": "ActiveAndDates"
				},
				{
					"name": "InsertNewRow"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          Name as string,",
				"          Department as string,",
				"          StartDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empCsv",
				"source(output(",
				"          emp_id as integer,",
				"          emp_name as string,",
				"          dept as string,",
				"          isactive as integer,",
				"          startdate as date,",
				"          enddate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> EmpSqlSCD2",
				"empCsv, EmpSqlSCD2 exists(md5(ID+Name+Department) == md5(emp_id+ toInteger(emp_name) + toInteger(dept)) ,",
				"     negate:true,",
				"     broadcast: 'auto')~> Notexists",
				"Notexists derive(isactive = 1,",
				"          StartDate = currentDate(),",
				"          EndDate = toDate('9999-12-31', 'yyyy-MM-dd')) ~> ActiveAndDates",
				"ActiveAndDates alterRow(insertIf(1==1)) ~> InsertNewRow",
				"InsertNewRow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          emp_id as integer,",
				"          emp_name as string,",
				"          dept as string,",
				"          isactive as integer,",
				"          startdate as date,",
				"          enddate as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          emp_id = ID,",
				"          emp_name = Name,",
				"          dept = Department,",
				"          isactive,",
				"          startdate = StartDate,",
				"          enddate = EndDate",
				"     )) ~> NewRecords"
			]
		}
	}
}