{
	"name": "DF_Join_ex",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movies_Input",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "MoviesDB_Input",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSVoutput",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "LK_ABS_Input",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "joininner1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"derivedColumn1, source2 join($title_trim == title_trim2,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joininner1",
				"source1 derive(title_new = trim(title)) ~> derivedColumn1",
				"joininner1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     partitionFileNames:['moviesjoinOPT2'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     quoteAll: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}