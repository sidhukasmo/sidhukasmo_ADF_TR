{
	"name": "DF_Agr_split",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movies",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "movies",
						"type": "DatasetReference"
					},
					"name": "SKColumnCount"
				},
				{
					"dataset": {
						"referenceName": "movies",
						"type": "DatasetReference"
					},
					"name": "SKColumnSplit"
				}
			],
			"transformations": [
				{
					"name": "DCyear"
				},
				{
					"name": "aggregateYear",
					"description": "Aaggregate Year"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(Year = trim(right(title, 6),'()'),",
				"          title = trim(title,right(title,6))) ~> DCyear",
				"DCyear aggregate(groupBy(Year),",
				"     ty = count(toInteger(Year))) ~> aggregateYear",
				"aggregateYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     partitionFileNames:['Movies_Count_Year'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SKColumnCount",
				"DCyear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     partitionFileNames:['movies_Split'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SKColumnSplit"
			]
		}
	}
}